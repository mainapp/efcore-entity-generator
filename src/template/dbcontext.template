using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.DotNet.ProjectModel.Resolution;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Z.EntityFramework.Plus;

namespace MyNamespace
{
    public partial class MyDbContext
    {
        private const string MySqlConnString = @"Server=192.168.1.60;Port=13306;Database=testdb;Uid=root;Pwd=wabjtam;Charset=utf8;";

        public MyDbContext()
        {
        }

        public MyDbContext(DbContextOptions options)
                    : base(options)
        {
        }

        public MyDbContext(DbContextOptions options) : base(options)
        {
            AuditManager.DefaultConfiguration.AutoSavePreAction = (context, audit) =>                
                ((MyDbContext)context).AuditEntries.AddRange(audit.Entries);
        }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            optionsBuilder.UseMySQL(MySqlConnString);
        }

        protected override void OnModelCreating(ModelBuilder builder)
        {
            base.OnModelCreating(builder);
            {% for idx in index %}
            {{idx}}
            {% endfor %}

            {% for rel in rels %}
            {{rel}}
            {% endfor %}
        }


        {% for entity in entities %}
        public DbSet<{{entity}}> {{entity}}s { get; set; }
        {% endfor %}

    }

    public static class MyDbContextFactory
    {
        public static MyDbContext Create()
        {
            var optionsBuilder = new DbContextOptionsBuilder<MyDbContext>();
            optionsBuilder.UseMySQL(MySqlConnString);

            var context = new MyDbContext(optionsBuilder.Options);
            context.Database.EnsureCreated();

            return context;
        }
    }    
}
