using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
// using Microsoft.AspNetCore.Identity.EntityFrameworkCore;
// using Z.EntityFramework.Plus;

namespace {{namespace}}
{
    public partial class {{ctx}}DbContext : DbContext
    {
        public {{ctx}}DbContext(DbContextOptions<{{ctx}}DbContext> options) : base(options)
        {
            // if using Z.EntityFramework.Plus 
            // AuditManager.DefaultConfiguration.AutoSavePreAction = (context, audit) =>
            //    (({{ctx}}DbContext)context).AuditEntries.AddRange(audit.Entries);
        }

        protected override void OnModelCreating(ModelBuilder builder)
        {
            base.OnModelCreating(builder);
            {% for idx in index %}
            {{idx}}
            {% endfor %}

            {% for rel in rels %}
            {{rel}}
            {% endfor %}

            {% for property in properties %}
            {{property}}
            {% endfor %}
        }


        // if using Z.EntityFramework.Plus 
        // public DbSet<AuditEntry> AuditEntries { get; set; }
        // public DbSet<AuditEntryProperty> AuditEntryProperties { get; set; }    

        {% for entity in entities %}
        public DbSet<{{entity}}> {{entity}}s { get; set; }
        {% endfor %}

    }

}
